<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Share&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://warmblog.com/"/>
<<<<<<< HEAD
  <updated>2018-03-29T13:22:28.456Z</updated>
=======
  <updated>2017-11-07T14:30:54.017Z</updated>
>>>>>>> parent of 7ff2451... Site updated: 2017-12-30 01:09:33
  <id>http://warmblog.com/</id>
  
  <author>
    <name>Share</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
<<<<<<< HEAD
=======
    <title>Hexo+Github 搭建属于自己的博客系列教程四：基于Next主题的美化和优化</title>
    <link href="http://warmblog.com/posts/28497.html"/>
    <id>http://warmblog.com/posts/28497.html</id>
    <published>2017-11-05T09:46:33.000Z</published>
    <updated>2017-11-07T14:30:54.017Z</updated>
    
    <content type="html"><![CDATA[<img src="http://oybu6iacu.bkt.clouddn.com/images/ar5_2017-11-05_174559.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;http://oybu6iacu.bkt.clouddn.com/images/ar5_2017-11-05_174559.png&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github 搭建属于自己的博客系列教程三：Hexo常用命令与Markdown常用语法</title>
    <link href="http://warmblog.com/posts/10258.html"/>
    <id>http://warmblog.com/posts/10258.html</id>
    <published>2017-11-05T07:25:18.000Z</published>
    <updated>2017-11-07T14:30:54.015Z</updated>
    
    <content type="html"><![CDATA[<img src="http://oybu6iacu.bkt.clouddn.com/images/ar4_e1dfe04b36e7984ed232c1155e9272f1.jpg"><a id="more"></a><h2 id="1，Hexo-常用的命令"><a href="#1，Hexo-常用的命令" class="headerlink" title="1，Hexo 常用的命令"></a>1，Hexo 常用的命令</h2><h3 id="1-1-常用指令与简写"><a href="#1-1-常用指令与简写" class="headerlink" title="1.1 常用指令与简写"></a>1.1 常用指令与简写</h3><p><br></p><blockquote><p><code>hexo new &quot;标题名&quot;</code>  #新建文章  &nbsp;&nbsp;&nbsp;&nbsp; <strong>可简写为：</strong><code>hexo n &quot;标题名&quot;</code></p><p><code>hexo new page &quot;页面名&quot;</code> #新建页面</p><p><code>hexo generate</code> #生成静态页面至public目录  &nbsp;&nbsp;&nbsp;&nbsp; <strong>可简写为：</strong> <code>hexo g</code></p><p><code>hexo server</code>  #开启预览访问端口  &nbsp;&nbsp;&nbsp;&nbsp; <strong>可简写为：</strong> <code>hexo s</code></p><p><code>hexo deploy</code> #部署至服务器 &nbsp;&nbsp;&nbsp;&nbsp; <strong>可简写为：</strong> <code>hexo d</code></p><p><code>hexo clean</code> #清除缓存，会删除以前生成的public目录中内容</p><p><code>hexo qiniu s</code> #扩展 ，安装七牛hexo-qiniu-sync 插件后可使用，用来上传图片</p></blockquote><h3 id="1-2-复合指令使用"><a href="#1-2-复合指令使用" class="headerlink" title="1.2 复合指令使用"></a>1.2 复合指令使用</h3><h4 id="1-2-1-跟换端口预览"><a href="#1-2-1-跟换端口预览" class="headerlink" title="1.2.1 跟换端口预览"></a>1.2.1 跟换端口预览</h4><blockquote><p><code>hexo server -p 5000</code>  跟换端口预览（在默认端口被占用的使用可使用）</p><p><strong>可简写为：</strong> <code>hexo s -p 5000</code></p></blockquote><h4 id="1-2-2-生成后本地预览"><a href="#1-2-2-生成后本地预览" class="headerlink" title="1.2.2 生成后本地预览"></a>1.2.2 生成后本地预览</h4><blockquote><p><code>hexo s -g</code> 生成后本地预览</p></blockquote><h4 id="1-2-3-生成后直接发布"><a href="#1-2-3-生成后直接发布" class="headerlink" title="1.2.3 生成后直接发布"></a>1.2.3 生成后直接发布</h4><blockquote><p><code>hexo d -g</code> 生成后直接发布</p></blockquote><hr><h2 id="2，Markdown常用的语法"><a href="#2，Markdown常用的语法" class="headerlink" title="2，Markdown常用的语法"></a>2，Markdown常用的语法</h2><h3 id="2-1-标题-‘-’"><a href="#2-1-标题-‘-’" class="headerlink" title="2.1 标题 ‘#’"></a>2.1 标题 ‘#’</h3><blockquote><p><code># 1级标题</code>  最大</p><p><code># 2级标题</code>  </p><p><code># 3级标题</code>  </p><p><code># 4级标题</code>  </p><p><code># 5级标题</code>  </p><p><code># 6级标题</code>  </p></blockquote><h3 id="2-2-粗体，斜体-‘-’-or-‘-’"><a href="#2-2-粗体，斜体-‘-’-or-‘-’" class="headerlink" title="2.2 粗体，斜体 ‘*’ or ‘_’"></a>2.2 粗体，斜体 ‘*’ or ‘_’</h3><blockquote><p><code>前后一个 * 或者 _ 为斜体</code> 示例 <code>*斜体*</code> <code>_斜体_</code></p><p><code>前后两个 * 或者 _ 为粗体</code> 示例 <code>**粗体**</code> <code>__粗体__</code></p></blockquote><h3 id="2-3-链接"><a href="#2-3-链接" class="headerlink" title="2.3 链接"></a>2.3 链接</h3><blockquote><p>格式一： <code>[链接名称](网址)</code></p><p>格式二： <code>链接名称&lt;网址&gt;</code></p></blockquote><h3 id="2-4-图片名称"><a href="#2-4-图片名称" class="headerlink" title="2.4 图片名称"></a>2.4 图片名称</h3><blockquote><p>格式：<code>![图片名称](图片地址)</code></p></blockquote><h3 id="2-5-无序列表-‘-’-or-‘-’or‘-’"><a href="#2-5-无序列表-‘-’-or-‘-’or‘-’" class="headerlink" title="2.5 无序列表 ‘-’ or ‘+’or‘*’"></a>2.5 无序列表 ‘-’ or ‘+’or‘*’</h3><blockquote><p>格式一：<code>- 文本</code>  减号+空格 文本</p><p>格式二：<code>+ 文本</code>  加好+空格 文本</p><p>格式三： <code>* 文本</code> 星号+空格 文本</p></blockquote><h3 id="2-6-有序列表-‘数字-’"><a href="#2-6-有序列表-‘数字-’" class="headerlink" title="2.6 有序列表 ‘数字.’"></a>2.6 有序列表 ‘数字.’</h3><blockquote><p>格式： <code>数字. 文本</code>  数字+英文句点+空格 文本（数字不影响实际的效果）</p></blockquote><h3 id="2-7-引用-‘-gt-’"><a href="#2-7-引用-‘-gt-’" class="headerlink" title="2.7 引用 ‘&gt;’"></a>2.7 引用 ‘&gt;’</h3><blockquote><p>格式： <code>&gt; 文本</code></p></blockquote><h3 id="2-8-分隔符-‘—’"><a href="#2-8-分隔符-‘—’" class="headerlink" title="2.8 分隔符 ‘—’"></a>2.8 分隔符 ‘—’</h3><blockquote><p>格式：<code>---</code></p></blockquote><h3 id="2-9-区块（4个空格）"><a href="#2-9-区块（4个空格）" class="headerlink" title="2.9 区块（4个空格）"></a>2.9 区块（4个空格）</h3><blockquote><p>格式：<code>缩进4个空格 文本</code></p></blockquote><h2 id="3，Next主题语法扩展"><a href="#3，Next主题语法扩展" class="headerlink" title="3，Next主题语法扩展"></a>3，Next主题语法扩展</h2><h3 id="3-1-截断显示内容"><a href="#3-1-截断显示内容" class="headerlink" title="3.1 截断显示内容"></a>3.1 截断显示内容</h3><blockquote><p><code>&lt;!--more--&gt;</code> 可在首页截断显示内容</p></blockquote><h3 id="3-2-代码块高亮"><a href="#3-2-代码块高亮" class="headerlink" title="3.2 代码块高亮"></a>3.2 代码块高亮</h3><blockquote><p>三个英文单点 语言 </p><p>代码内容</p><p>三个英文单点</p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar4_2017-11-05_172654.png"><blockquote><p><code>更多的内容，后面再陆续补充，敬请期待！</code></p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oybu6iacu.bkt.clouddn.com/images/ar4_e1dfe04b36e7984ed232c1155e9272f1.jpg&quot;&gt;
    
    </summary>
    
      <category term="Hexo博客开发" scheme="http://warmblog.com/categories/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="http://warmblog.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://warmblog.com/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>微信开发系列教程一：基于VS2013的微信本地开发调试环境构建</title>
    <link href="http://warmblog.com/posts/64840.html"/>
    <id>http://warmblog.com/posts/64840.html</id>
    <published>2017-10-30T13:37:57.000Z</published>
    <updated>2017-11-07T14:30:54.009Z</updated>
    
    <content type="html"><![CDATA[<img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_213528.png"><a id="more"></a><h1 id="1，引言"><a href="#1，引言" class="headerlink" title="1，引言"></a>1，引言</h1><p><br></p><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;刚开始接触微信开发，便面临着一个非常头痛的问题,    <code>如何能够在本地开发调试</code>。因为微信有一个很尴尬的问题，<code>就是你的处理程序必须在服务器上，只支持外网链接</code>。一开始采取了一种最原始的方式，那就是将程序发布在服务器上，在程序关键位置<code>写上日志</code>，根据日志的情况再修改，调试，发布到服务器上，不能够打上断点，还不停的发布，简直感觉开发效率极其的低下，最后，终于找到了两款工具，<code>花生壳</code> 和 <code>NATAPP</code>，带来了开发的曙光。我以自己目前的vs2013的开发环境为例，<code>工具不受环境和语言的影响</code>，讲解最基本的使用方法。</p></blockquote><h1 id="2，使用花生壳完成映射"><a href="#2，使用花生壳完成映射" class="headerlink" title="2，使用花生壳完成映射"></a>2，使用花生壳完成映射</h1><h2 id="2-1-在官网注册账户"><a href="#2-1-在官网注册账户" class="headerlink" title="2.1 在官网注册账户"></a>2.1 在官网注册账户</h2><p>PS : 在官网注册（<code>注意，使用花生壳的免费穿透服务是需要实名认证的</code>）</p><p><a href="https://hsk.oray.com/download/" target="_blank" rel="external">官网地址</a><br><a href="https://hsk.oray.com/download/" target="_blank" rel="external">客户端下载地址</a></p><p>选择个人免费版，下载相应版本的内网版客户端，然后需要花费<code>7元</code>开通永久的内网穿透服务，打开后样子是这样的</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_225620.png"><h2 id="2-2-使用花生壳进行本地映射"><a href="#2-2-使用花生壳进行本地映射" class="headerlink" title="2.2 使用花生壳进行本地映射"></a>2.2 使用花生壳进行本地映射</h2><p>PS : 花生壳会免费送你一个免备案的三级域名，可直接进行微信的本地调试开发</p><p><strong>（1）添加一个映射，如下图</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_230326.png"><p><strong>（2）控制台 <code>ipconfig</code> 拿到本地地址，选择花生壳送的域名，添加内网映射</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_230314.png"><h2 id="2-3-目前使用花生壳的问题"><a href="#2-3-目前使用花生壳的问题" class="headerlink" title="2.3 目前使用花生壳的问题"></a>2.3 目前使用花生壳的问题</h2><p><strong>（1） 刚添加好的映射，<code>几个小时内可能会因为DNS解析等等的原因，使用不了</code>，我第一次用的时候，各种方法都试过，就是访问不了，等到第二天就自动的好了</strong></p><p><strong>（2） 偶尔会不稳定，有时候就是可能因为网络环境等等的问题，就是访问不了</strong></p><h1 id="3，使用NATAPP"><a href="#3，使用NATAPP" class="headerlink" title="3，使用NATAPP"></a>3，使用NATAPP</h1><h2 id="3-1-在官网注册账户"><a href="#3-1-在官网注册账户" class="headerlink" title="3.1 在官网注册账户"></a>3.1 在官网注册账户</h2><p>PS : 推荐使用NATAPP，注册简单，使用方便，免费需要实名，vip免实名</p><p><a href="https://natapp.cn/" target="_blank" rel="external">官网地址</a><br><a href="https://natapp.cn/" target="_blank" rel="external">客户端下载地址</a></p><h2 id="3-2-使用NATAPP进行本地映射"><a href="#3-2-使用NATAPP进行本地映射" class="headerlink" title="3.2 使用NATAPP进行本地映射"></a>3.2 使用NATAPP进行本地映射</h2><p>PS : 需要在这里购买一个二级域名，最便宜的3元一年，然后我目前使用的5元每月的隧道，有免费的</p><p><strong>（1） 登录后，在添加好的隧道里进行配置</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_233010.png"><p><strong>（2）将购买的二级域名和本机的地址联系起来</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_233051.png"><p><strong>（3）下载客户端，下载配置文件放在exe同级目录</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_233726.png"><p><a href="http://download.natapp.cn/assets/downloads/windowsconfig/config.ini" target="_blank" rel="external">配置文件下载地址</a></p><p>打开配置文件 ，填入自己隧道的authtoken值，其他不用填，然后保存</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_234148.png"><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_234419.png"><p><strong>（4）双击打开exe程序，呈现如下页面就表示连通</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_234608.png"><p>还有问题请参考<br><a href="https://natapp.cn/article/natapp_newbie" target="_blank" rel="external">官网简易教程</a></p><h1 id="4，微信本机开发调试"><a href="#4，微信本机开发调试" class="headerlink" title="4，微信本机开发调试"></a>4，微信本机开发调试</h1><h2 id="4-1-将程序放置在本地的服务器上，以IIS为例"><a href="#4-1-将程序放置在本地的服务器上，以IIS为例" class="headerlink" title="4.1 将程序放置在本地的服务器上，以IIS为例"></a>4.1 将程序放置在本地的服务器上，以IIS为例</h2><p><strong>（1）将开发中的程序（<code>不是发布后的程序</code>）直接在本地的IIS中添加网站，然后主机名绑定为你映射的域名</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_235438.png"><h2 id="4-2-将微信的接口地址切换成映射域名"><a href="#4-2-将微信的接口地址切换成映射域名" class="headerlink" title="4.2 将微信的接口地址切换成映射域名"></a>4.2 将微信的接口地址切换成映射域名</h2><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_235709.png"><h2 id="4-3-找到并打开vs远程调试工具"><a href="#4-3-找到并打开vs远程调试工具" class="headerlink" title="4.3 找到并打开vs远程调试工具"></a>4.3 找到并打开vs远程调试工具</h2><p><strong>（1）在系统开始文件夹找到Visual Studio Tools</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-31_000325.png"><p><strong>（2）在此文件加中找到msvsmon.exe程序</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-31_000117.png"><p><strong>（3）打开后，选择工具-选项，设定为无身份验证，然后确定_</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-31_000659.png"><p><strong>（4）以<code>管理员身份</code>在vs中打开在IIS中部署的项目，然后调试，附加到进程w3wp.exe</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-31_001247.png"><img src="http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-31_001306.png"><p><strong>（5）若没有找到此进程，请检查是否以<code>管理员权限</code>打开的vs,或者<code>刷新IIS</code>相关的网站即可</strong></p><h1 id="5，终言"><a href="#5，终言" class="headerlink" title="5，终言"></a>5，终言</h1><blockquote><p>在微信中发一个消息，你会惊奇的发现，程序进入到了断点之中，从此，再也不用每次都发布，靠日志再来调试了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oybu6iacu.bkt.clouddn.com/images/ar3_2017-10-30_213528.png&quot;&gt;
    
    </summary>
    
      <category term="微信开发" scheme="http://warmblog.com/categories/%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="花生壳" scheme="http://warmblog.com/tags/%E8%8A%B1%E7%94%9F%E5%A3%B3/"/>
    
      <category term="NATAPP" scheme="http://warmblog.com/tags/NATAPP/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github 搭建属于自己的博客系列教程二：博客写作与发布</title>
    <link href="http://warmblog.com/posts/4536.html"/>
    <id>http://warmblog.com/posts/4536.html</id>
    <published>2017-10-23T11:48:02.000Z</published>
    <updated>2017-11-07T14:30:54.006Z</updated>
    
    <content type="html"><![CDATA[<img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_10001.jpg"><h1 id="1，序言"><a href="#1，序言" class="headerlink" title="1，序言"></a>1，序言</h1><blockquote><p>在上一篇中，已经讲明了hexo博客运行所需要的基本环境，接下来，将介绍如何去创作和发布博客，这样我们就可以基本体验到hexo博客的魅力。</p></blockquote><a id="more"></a><h1 id="2，博客写作，发布基础方式"><a href="#2，博客写作，发布基础方式" class="headerlink" title="2，博客写作，发布基础方式"></a>2，博客写作，发布基础方式</h1><h2 id="2-1-传统博客写作"><a href="#2-1-传统博客写作" class="headerlink" title="2.1 传统博客写作"></a>2.1 传统博客写作</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>1. 命令行进入到安装好hexo的目录</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_200651.png"><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>2. 输入以下的命令</strong></p><blockquote><p><code>hexo new post &quot;文章标题&quot;</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_201045.png"><p>&nbsp;&nbsp;&nbsp;&nbsp;就可在紫色路径下找到该文件，然后使用一款<code>可以编辑markdown文件的编辑器进行编辑</code>，因为目前使用的编辑器较少，此处对于编辑器不做多的介绍，可自行百度。<br><strong>PS:一开始我使用的是sublime 安装相关的插件进行编辑，在博客写作上并不是特别的方便,后面会有一款插件介绍，可以极大的加快博客的效率</strong></p><h2 id="2-2-发布"><a href="#2-2-发布" class="headerlink" title="2.2 发布"></a>2.2 发布</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>1. 编辑完成后，首先为了发布，需要先安装一个插件，输入以下的命令</strong></p><blockquote><p><code>npm install hexo-deployer-git --save</code></p></blockquote><p>未安装的话可能会出现 <code>deloyer not found:git</code>的错误</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>2. 输入生成和部署的命令</strong></p><blockquote><p><code>hexo g   // 生成</code><br><code>hexo d   // 部署</code></p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;可以简化为</p><blockquote><p><code>hexo d -g 在部署前先生成</code></p></blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当看到下图，即为完成</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_202648.png"><blockquote><p>接下来,就可以输入网址 <a href="http://yourName.github.io" target="_blank" rel="external">http://yourName.github.io</a> 就可以看到生成的文章</p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_204655.png"><blockquote><p><strong>PS :如果出现下面的错误</strong><br>Permission denied (publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights<br>and the repository exists.<br>则是因为没有设置好public key所致。<br><code>解决请操作参照第一篇博文Git ssh 配置及使用重新设置</code></p></blockquote><h2 id="2-3-插件方式写作"><a href="#2-3-插件方式写作" class="headerlink" title="2.3 插件方式写作"></a>2.3 插件方式写作</h2><blockquote><p>作为一个markdown的新手，面对各式各样的软件真的是不太好选择，这样写作博客可能会成为一项沉重的负担<br>并且我们写hexo博客，基本上不会像上面那样直接提交，<strong>我们还需要在本地预览一下效果，因为在其他编辑器里的效果可能不会凑效</strong><br><strong><code>那么我们就需要一款适合hexo语法，并且所见即所得的编辑器，那么admin插件就来了</code></strong></p></blockquote><p><strong>1. 首先我们需要回忆hexo本地预览，在hexo目录下输入</strong></p><blockquote><p><code>hexo g</code> 生成  <code>hexo s</code> 运行</p><p>可以简化为 <code>hexo s -g</code>  </p></blockquote><p>然后输入启动的路径就可以看到效果</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_205015.png"><p><strong>在其他编辑器里完成的效果可能会有问题，那么我们就需要找到需要修改的文件，再去修改，然后在来生成预览，整个过程就会比较的麻烦</strong></p><p><strong>2. 体验Admin插件带来的畅快舒适感</strong></p><p>① 安装admin插件，在博客目录下输入</p><blockquote><p><code>npm install --save hexo-admin</code></p></blockquote><p>② 安装完成后输入</p><blockquote><p><code>hexo s -g</code></p></blockquote><p>③ 接着你可以在 <strong>localhost:端口号/admin</strong> 路径下进入博客的管理界面</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_210951.png"><p>④ 使用admin插件进行写作</p><p><strong>（1） 在Posts 栏下，点击 New Post , 新建一篇新的博客</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_211237.png"><p><strong>（2）接下来你会看到两栏，左边是是编辑区，右边是预览区，一边写，一遍渲染</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_211823.png"><p><strong>（3）第一次写的时候记得点击Publish，这样才会有文件生成</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_212640.png"><p><strong>（4）但是你会发现，这样还不够，因为和在网页上直接看博客还有区别，那么你可以这样做</strong></p><blockquote><p><strong>在浏览器中分别打开，<code>localhost:端口号</code> 和 <code>localhost:端口号/admin</code> 两个网址，然后在admin的编辑器里编辑，然后点击localhost:端口号的页面进行刷新，那酸爽，谁用谁知道，左边编辑，右边看语法效果，再右边就是网页里实际的效果如下图</strong></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_212414.png"><p><strong>（5）写完后参照上面的发布方法发布即可，关于这个插件功能很强大，此处暂只做最简单的使用讲解，后面会慢慢的介绍，也可自行百度</strong></p><p><strong>3. 书写hexo博客 ，你还可以更方便</strong></p><blockquote><p><strong>我们会发现，我们使用admin插件，首先需要</strong><br>（1）在命令行中进入到博客所在的目录<br>（2）输入 hexo s -g<br> （3）在网址栏分别打开 <code>localhost:端口号</code> 和 <code>localhost:端口号/admin</code> 两个网址<br> 这几步才可以，下面会介绍如何实现</p><p><strong>开机自动执行（1）（2）,我们每次只需要直接在网址栏打开地址即可</strong></p></blockquote><p> <strong>① 我们需要创建两个脚本，一个为vbs脚本，一个为bat脚本，<code>vbs脚本放到启动文件夹，用于运行bat脚本，而bat脚本用于启动hexo server</code><br> (PS:你可以不用理解和深入去研究，就是相当于我们使用了工具自动执行了步骤1,步骤2)</strong></p><p> <strong>② 创建bat脚本，直接先新建个txt文档，在里面写上(注释不用管，只写命令)</strong></p><blockquote><p><code>d:</code>  你博客所在盘<br>  <code>cd hexo/npm</code> 你博客所在的路径<br>  <code>hexo s -g</code>  </p></blockquote><p>  <strong>然后保存文件，将文件的后缀名改为<code>bat</code>即可</strong></p><p><strong>③ 将创建好的.bat文件放入和博客同目录下</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_215129.png"><p>__④ 创建vbs脚本，也是新建txt文档，在里面写上 </p><blockquote><p><code>set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</code><br><code>ws.Run &quot;D:\\Plugins\\hexo-server.bat /start&quot;,0</code></p></blockquote><p><strong>注意：命令里的路径就是你刚才放置文件的路径</strong>，<code>保存后改文件后缀为.vbs</code></p><p><strong>⑤ 将vbs文件放置到系统启动目录下</strong></p><p>一般路径为： <code>C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code></p><p>注意文件夹很多可能是以中文命名的，参考下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_215843.png"><blockquote><p> <code>建议直接复制路径，放置完成后，重启电脑，然后直接在浏览器即可打开地址</code></p></blockquote><h1 id="3-hexo-主题设置"><a href="#3-hexo-主题设置" class="headerlink" title="3 , hexo 主题设置"></a>3 , hexo 主题设置</h1><h2 id="3-1-简约的两款主题介绍和安装"><a href="#3-1-简约的两款主题介绍和安装" class="headerlink" title="3.1 简约的两款主题介绍和安装"></a>3.1 简约的两款主题介绍和安装</h2><blockquote><p>当你完成从第一篇介绍到现在的步骤后，对于博客最基础的构建已经完成，但是，当我们真正的开始写作的时候，我们是不会采用hexo自带的那张有点不是很好看的主题，一般都会选择一款自己喜欢的style，我只简要介绍一下两个</p></blockquote><p> <strong>1. 主题初体验</strong></p><blockquote><p>Yilia</p></blockquote> <img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_221812.png"><p> <strong>本博客采用的就是此主题</strong></p><blockquote><p>NexT</p></blockquote>  <img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_222735.png"><p> <strong>2. 主题安装</strong></p><blockquote><p>目前接触的Yilia主题比较多，也比较喜欢这样的style,后面教程都以此主题为例，其他主题的操作方法类似</p></blockquote><p>（1）打开git bash 命令窗口（不是window）,先进入到博客所在的目录</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_224247.png"><p>（2）接着输入以下的指令</p><blockquote><p><code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></p></blockquote><p><strong>回车即可安装</strong></p><p>（3）然后找到博客根目录下的<code>_config.yml</code>文件,修改theme参数为yilla</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_224638.png"><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_224714.png"><p>（4）然后重新发布，你会看到界面主题已经换掉了</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_224934.png"><hr><blockquote><p>因为篇幅的问题，这篇博客就介绍到这里，关于yilla主题的一些详细设置等将会在下一篇博客中讲述，</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oybu6iacu.bkt.clouddn.com/images/ar2_2017-10-23_10001.jpg&quot;&gt;
&lt;h1 id=&quot;1，序言&quot;&gt;&lt;a href=&quot;#1，序言&quot; class=&quot;headerlink&quot; title=&quot;1，序言&quot;&gt;&lt;/a&gt;1，序言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;在上一篇中，已经讲明了hexo博客运行所需要的基本环境，接下来，将介绍如何去创作和发布博客，这样我们就可以基本体验到hexo博客的魅力。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo博客开发" scheme="http://warmblog.com/categories/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="http://warmblog.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://warmblog.com/tags/Github/"/>
    
  </entry>
  
  <entry>
>>>>>>> parent of 7ff2451... Site updated: 2017-12-30 01:09:33
    <title>Hexo+Github 搭建属于自己的博客系列教程一：基础环境搭建</title>
    <link href="http://warmblog.com/posts/16884.html"/>
    <id>http://warmblog.com/posts/16884.html</id>
    <published>2017-10-21T12:32:00.000Z</published>
    <updated>2018-03-29T13:22:28.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1，序言"><a href="#1，序言" class="headerlink" title="1，序言"></a>1，序言</h1><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;一直想要搭建一个属于自己的博客，可总是能够给自己找到很多理由去拖延，直到最近看了大鹏的《缝纫机乐队》，当结尾那首Beyond<code>不再犹豫</code>响起的时候，我知道，不能够在沉浸在过去的困顿中，不再犹豫。 </p></blockquote><a id="more"></a><h1 id="2，配置hexo基本环境"><a href="#2，配置hexo基本环境" class="headerlink" title="2，配置hexo基本环境"></a>2，配置hexo基本环境</h1><h2 id="2-1-配置Node-js-环境"><a href="#2-1-配置Node-js-环境" class="headerlink" title="2.1 配置Node.js 环境"></a>2.1 配置Node.js 环境</h2><p><strong> 1 </strong>. 下载Node.js安装文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （1） <a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="external">Windows Installer 32-bit</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （2） <a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="external">Windows Installer 64-bit</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （3） <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="external">官网下载地址</a></p><p><strong> 2 </strong>. 安装并测试Node.js环境</p><p><strong>① 一路只需要next安装，不需要特定的去选择什么，界面如下</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_212528.png"><p><strong>② 安装完成后，win+r 打开控制台界面，在控制台输入以下命令</strong></p><blockquote><p><code>node -v</code><br><code>npm -v</code></p></blockquote><p>如果能够看到下图所示的版本号，则说明node.js环境已经成功安装</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_213405.png"><h2 id="2-2-配置Git环境"><a href="#2-2-配置Git环境" class="headerlink" title="2.2 配置Git环境"></a>2.2 配置Git环境</h2><p><strong> 1 </strong>. 下载git安装文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （1） <a href="https://git-scm.com/downloads" target="_blank" rel="external">Git官网下载地址</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （2） <a href="https://github-cloud.s3.amazonaws.com/releases/23216272/84b33b96-87f5-11e5-8f91-32080286239e.exe?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAISTNZFOVBIJMK3TQ%2F20161210%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20161210T033734Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=912c155bbe0fe970ca7b948f5f0d5e8c68c712b7fb8006062f53c8638c62c7b6&amp;X-Amz-SignedHeaders=host&amp;actor_id=14971673&amp;response-content-disposition=attachment%3B%20filename%3DGit-2.6.3-64-bit.exe&amp;response-content-type=application%2Foctet-stream" target="_blank" rel="external">Git-2.6.3-64-bit.exe</a></p><p><strong> 2 </strong>. 安装并测试git环境</p><p><strong>① Git安装界面如下图所示</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_213958.png"><p>② 和Node的安装一样，大部分设置直接保持你默认选择即可，但是，为了以后的操作方便，建议Git Path 按照下图来选择，既可以在win的控制台里面使用</p><p>（<strong>为了安全，git的操作默认只能够在Git Bash中使用</strong>）</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_214408.png"><p><strong>③ Git环境测试，在控制台输入一下命令（注意是两个-）</strong></p><blockquote><p><code>git - - veision</code></p></blockquote><p>若出现下图的版本号，则意味着，安装成功</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_215303.png"><h2 id="2-3-配置Github的环境"><a href="#2-3-配置Github的环境" class="headerlink" title="2.3 配置Github的环境"></a>2.3 配置Github的环境</h2><p><strong> 1 </strong>. 注册github的账号</p><p>PS: 邮箱一定要填写正确，因为会有确认的邮件发送到你填的邮箱，不确认的话可能会导致github pages无法使用的问题</p><p><strong> 2 </strong>. 创建博客的仓库</p><p><strong>（1）如果是刚注册的新号，过程如下</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222231.png"><p><strong>（2）如果是已经注册过的账号，过程如下</strong><br>具体步骤如下图，特别注意，确认仓库名的格式为：<code>用户名.github.io</code>  (这样后面可以简化对于博客域名的访问)</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_221039.png"><p><strong> 3 </strong>. 仓库具体设置</p><p><strong>① 点击setting选项 找到 GitHub Pages 的相关设置（一直向下翻）</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_221704.png"><p><strong>② 点击 choose a theme 随便 选择一个主题</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222325.png"><p><strong>③ 点击提交更改</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222548.png"><p><strong>④ 访问github pages页面</strong></p><blockquote><p>因为我们仓库名设置 用户.github.io 现在我们访问地址可以简化为 <a href="http://用户名.github.io" target="_blank" rel="external">http://用户名.github.io</a> 不用像下图一样添加仓库名的后缀了</p></blockquote><p>地址如图所示，若无法访问，请稍等一会再访问，因为可能有解析时间的问题</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222633.png"><p>如能够显示选择的主题页面，则说明环境配置正确</p><blockquote><p>至此，hexo 搭建博客最基本的环境就搭建成功了，接下来我们开始安装hexo</p></blockquote><h1 id="3，Hexo的安装与配置"><a href="#3，Hexo的安装与配置" class="headerlink" title="3，Hexo的安装与配置"></a>3，Hexo的安装与配置</h1><h2 id="3-1-安装Hexo"><a href="#3-1-安装Hexo" class="headerlink" title="3.1 安装Hexo"></a>3.1 安装Hexo</h2><p><strong> 1. 在合适的位置建立文件夹，通过npm安装Hexo到此目录中</strong></p><p><strong>①</strong> 此处以D盘Hexo为例（请自己选择合适位置），首先建立该目录，然后在控制台中进入到该目录中，如下图所示</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_141435.png"><p><strong>②</strong> 接着输入以下的命令(<code>以下所有的命令都是在当前文件夹下</code>)</p><blockquote><p><code>npm install hexo-cli -g</code></p></blockquote><p>然后你可以看到下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_141840.png"><p>可能会有一些warning,但是不会影响正常的使用，然后输入</p><blockquote><p><code>npm install hexo - - save</code></p></blockquote><p>你会看到命令窗刷新了一大堆的安装</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_142512.png"><p>等到安装完毕，再输入以下的命令</p><blockquote><p><code>hexo -v</code></p></blockquote><p><strong>若能够看到如下的界面，则说明安装成功</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_142740.png"><h2 id="3-2-Hexo的相关配置"><a href="#3-2-Hexo的相关配置" class="headerlink" title="3.2 Hexo的相关配置"></a>3.2 Hexo的相关配置</h2><p>__1. 初始化 hexo(依旧是在当前目录下，使用命令行工具)，输入</p><blockquote><p><code>hexo init  npm install</code></p></blockquote><p>之后等待安装完成即可,完成后如下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_143748.png"><p>文件夹的结构为下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_144612.png"><p><strong>2. 体验Hexo</strong></p><p>上面安装完成后，在命令行中进入到<code>npm文件夹</code>下（一定要在该文件夹下，以下命令才会有效）</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145054.png"><p>输入以下的命令，你会看到下图所示</p><blockquote><p><code>hexo g</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145228.png"><p>然后输入</p><blockquote><p><code>hexo s</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145427.png"><p>接着你可以在浏览器中打开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> ，你将会看到：</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150037.png"><p><strong>PS: 对于某些电脑，你会尴尬的发现，你怎么都打不开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 这个网址，那么你可能是安装了这个软件,<code>福听阅读器</code></strong><br><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150253.png"></p><p><strong>认真看的朋友会发现，我们打开的是<code>4000</code>的端口，但是装了福听阅读器的电脑，这个软件已经默认的把4000的端口占领，我们使用不了，所以网址进不去，我提供一种可以解决的方案</strong></p><p><strong>①</strong> 找到hexo/npm目录下的_config.yml文件夹</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150645.png"><p><strong> ② </strong> 可在底部加入如下配置</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150918.png"><p>随便设置一个新的端口号（最大为65535，一般选择不要选择太小的，容易被占用），然后再重新输入</p><blockquote><p><code>hexo s</code> </p></blockquote><p>你会发现端口号已经改变了</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_151325.png"><p>在新的地址下即可访问</p><h2 id="3-3-将Hexo和github-pages联系起来"><a href="#3-3-将Hexo和github-pages联系起来" class="headerlink" title="3.3 将Hexo和github pages联系起来"></a>3.3 将Hexo和github pages联系起来</h2><p><strong>1. 配置git的个人信息</strong></p><p>安装git环境后，桌面上会有Git Bash 图标，接下来的操作都在此工具中进行</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_152230.png"><p><strong>①</strong> 设置Git的 user.name 和 user.email （如果你是第一次用的话）</p><p>输入以下的命令到git bash 中      </p><blockquote><p> 这里的“share” 可以替换成自己的用户名<br> <code>git config --global user.name &quot;share&quot;</code><br>这里的邮箱 share_test@163.com  替换成自己的邮箱<br><code>git config --global user.email  &quot;share_test@163.com&quot;</code></p></blockquote><p><strong>2. 检查是否有SSH Key</strong></p><p>先输入以下的命令</p><blockquote><p> <code>cd ~/.ssh</code></p></blockquote><p>接着输入</p><blockquote><p><code>ls</code></p></blockquote><p>如果出现 <strong>id_isa</strong> 和 <strong>id_isa.pub</strong> 文件，就证明已经存在SSH Key,就不用执行生成密钥的步骤了</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_153921.png"><p><strong>3. 生成密钥</strong></p><blockquote><p> 这里的邮箱 share_test@163.com  替换成自己的邮箱<br> <code>ssh-keygen -t rsa -C &quot;share_test@163.com&quot;</code></p></blockquote><p>输入以上的命令，连续三个回车，最后得到了两个文件：id_rsa和id_rsa.pub</p><p>默认的存储路径是 C:\Users\Administrator.ssh </p><p><strong>4. 添加密钥到ssh-agent</strong></p><p>确保 ssh-agent 是可用的。ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个<code>密钥管理器</code>，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。</p><p>输入以下的命令</p><blockquote><p> start the ssh-agent in the background<br> <code>eval &quot;$(ssh-agent -s)&quot;</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_154602.png"><p>添加生成的 SSH key 到 ssh-agent,再输入以下的命令</p><blockquote><p><code>ssh-add ~/.ssh/id_rsa</code></p></blockquote><p><strong>5.登录Github,添加SSH</strong></p><p>① 在电脑 C:\Users\Administrator.ssh 找到 id_rsa.pub文件 打开并复制</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_155517.png"><p>② 登录github账户，找到如下的设置</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_154852.png"><p>③ 添加SSH,将复制的内容粘贴到此处</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_155312.png"><p><strong>6.测试添加是否成功</strong></p><p>输入以下的指令</p><blockquote><p><code>ssh -T git@github.com</code></p></blockquote><p>按回车，稍等片刻，若出现</p><blockquote><p>Hi 你的用户名! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_160106.png"><p>说明配置已经成功了</p><p><strong>7. 配置hexo配置文件</strong></p><p>① 找到hexo/npm目录下的_config.yml文件夹</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150645.png"><p>② 找到Deployment，然后按照如下修改：</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_160606.png"><blockquote><p><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: git@github.com:yourname/yourname.github.io.git</code><br>  <code>branch: master</code></p></blockquote><p>  我的GitHub用户名为Test,则修改为</p><blockquote><p><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: git@github.com:Test/Test.github.io.git</code><br>  <code>branch: master</code></p></blockquote><hr><blockquote><p>至此，hexo+github pages的基本环境已经搭建完成，由于篇幅问题，接下来的内容由后面的文章来讲述，感谢你的阅读。因为个人能力有限，如果文章中有错误，可以及时的留言，谢谢。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1，序言&quot;&gt;&lt;a href=&quot;#1，序言&quot; class=&quot;headerlink&quot; title=&quot;1，序言&quot;&gt;&lt;/a&gt;1，序言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一直想要搭建一个属于自己的博客，可总是能够给自己找到很多理由去拖延，直到最近看了大鹏的《缝纫机乐队》，当结尾那首Beyond&lt;code&gt;不再犹豫&lt;/code&gt;响起的时候，我知道，不能够在沉浸在过去的困顿中，不再犹豫。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo博客开发" scheme="http://warmblog.com/categories/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="http://warmblog.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://warmblog.com/tags/Github/"/>
    
  </entry>
  
</feed>
