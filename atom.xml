<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Share&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://warmblog.com/"/>
  <updated>2018-03-29T13:22:28.456Z</updated>
  <id>http://warmblog.com/</id>
  
  <author>
    <name>Share</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Github 搭建属于自己的博客系列教程一：基础环境搭建</title>
    <link href="http://warmblog.com/posts/16884.html"/>
    <id>http://warmblog.com/posts/16884.html</id>
    <published>2017-10-21T12:32:00.000Z</published>
    <updated>2018-03-29T13:22:28.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1，序言"><a href="#1，序言" class="headerlink" title="1，序言"></a>1，序言</h1><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;一直想要搭建一个属于自己的博客，可总是能够给自己找到很多理由去拖延，直到最近看了大鹏的《缝纫机乐队》，当结尾那首Beyond<code>不再犹豫</code>响起的时候，我知道，不能够在沉浸在过去的困顿中，不再犹豫。 </p></blockquote><a id="more"></a><h1 id="2，配置hexo基本环境"><a href="#2，配置hexo基本环境" class="headerlink" title="2，配置hexo基本环境"></a>2，配置hexo基本环境</h1><h2 id="2-1-配置Node-js-环境"><a href="#2-1-配置Node-js-环境" class="headerlink" title="2.1 配置Node.js 环境"></a>2.1 配置Node.js 环境</h2><p><strong> 1 </strong>. 下载Node.js安装文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （1） <a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x86.msi" target="_blank" rel="external">Windows Installer 32-bit</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （2） <a href="https://nodejs.org/dist/v4.2.3/node-v4.2.3-x64.msi" target="_blank" rel="external">Windows Installer 64-bit</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （3） <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="external">官网下载地址</a></p><p><strong> 2 </strong>. 安装并测试Node.js环境</p><p><strong>① 一路只需要next安装，不需要特定的去选择什么，界面如下</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_212528.png"><p><strong>② 安装完成后，win+r 打开控制台界面，在控制台输入以下命令</strong></p><blockquote><p><code>node -v</code><br><code>npm -v</code></p></blockquote><p>如果能够看到下图所示的版本号，则说明node.js环境已经成功安装</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_213405.png"><h2 id="2-2-配置Git环境"><a href="#2-2-配置Git环境" class="headerlink" title="2.2 配置Git环境"></a>2.2 配置Git环境</h2><p><strong> 1 </strong>. 下载git安装文件</p><p>&nbsp;&nbsp;&nbsp;&nbsp; （1） <a href="https://git-scm.com/downloads" target="_blank" rel="external">Git官网下载地址</a><br>&nbsp;&nbsp;&nbsp;&nbsp; （2） <a href="https://github-cloud.s3.amazonaws.com/releases/23216272/84b33b96-87f5-11e5-8f91-32080286239e.exe?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AKIAISTNZFOVBIJMK3TQ%2F20161210%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20161210T033734Z&amp;X-Amz-Expires=300&amp;X-Amz-Signature=912c155bbe0fe970ca7b948f5f0d5e8c68c712b7fb8006062f53c8638c62c7b6&amp;X-Amz-SignedHeaders=host&amp;actor_id=14971673&amp;response-content-disposition=attachment%3B%20filename%3DGit-2.6.3-64-bit.exe&amp;response-content-type=application%2Foctet-stream" target="_blank" rel="external">Git-2.6.3-64-bit.exe</a></p><p><strong> 2 </strong>. 安装并测试git环境</p><p><strong>① Git安装界面如下图所示</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_213958.png"><p>② 和Node的安装一样，大部分设置直接保持你默认选择即可，但是，为了以后的操作方便，建议Git Path 按照下图来选择，既可以在win的控制台里面使用</p><p>（<strong>为了安全，git的操作默认只能够在Git Bash中使用</strong>）</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_214408.png"><p><strong>③ Git环境测试，在控制台输入一下命令（注意是两个-）</strong></p><blockquote><p><code>git - - veision</code></p></blockquote><p>若出现下图的版本号，则意味着，安装成功</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_215303.png"><h2 id="2-3-配置Github的环境"><a href="#2-3-配置Github的环境" class="headerlink" title="2.3 配置Github的环境"></a>2.3 配置Github的环境</h2><p><strong> 1 </strong>. 注册github的账号</p><p>PS: 邮箱一定要填写正确，因为会有确认的邮件发送到你填的邮箱，不确认的话可能会导致github pages无法使用的问题</p><p><strong> 2 </strong>. 创建博客的仓库</p><p><strong>（1）如果是刚注册的新号，过程如下</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222231.png"><p><strong>（2）如果是已经注册过的账号，过程如下</strong><br>具体步骤如下图，特别注意，确认仓库名的格式为：<code>用户名.github.io</code>  (这样后面可以简化对于博客域名的访问)</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_221039.png"><p><strong> 3 </strong>. 仓库具体设置</p><p><strong>① 点击setting选项 找到 GitHub Pages 的相关设置（一直向下翻）</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_221704.png"><p><strong>② 点击 choose a theme 随便 选择一个主题</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222325.png"><p><strong>③ 点击提交更改</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222548.png"><p><strong>④ 访问github pages页面</strong></p><blockquote><p>因为我们仓库名设置 用户.github.io 现在我们访问地址可以简化为 <a href="http://用户名.github.io" target="_blank" rel="external">http://用户名.github.io</a> 不用像下图一样添加仓库名的后缀了</p></blockquote><p>地址如图所示，若无法访问，请稍等一会再访问，因为可能有解析时间的问题</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-21_222633.png"><p>如能够显示选择的主题页面，则说明环境配置正确</p><blockquote><p>至此，hexo 搭建博客最基本的环境就搭建成功了，接下来我们开始安装hexo</p></blockquote><h1 id="3，Hexo的安装与配置"><a href="#3，Hexo的安装与配置" class="headerlink" title="3，Hexo的安装与配置"></a>3，Hexo的安装与配置</h1><h2 id="3-1-安装Hexo"><a href="#3-1-安装Hexo" class="headerlink" title="3.1 安装Hexo"></a>3.1 安装Hexo</h2><p><strong> 1. 在合适的位置建立文件夹，通过npm安装Hexo到此目录中</strong></p><p><strong>①</strong> 此处以D盘Hexo为例（请自己选择合适位置），首先建立该目录，然后在控制台中进入到该目录中，如下图所示</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_141435.png"><p><strong>②</strong> 接着输入以下的命令(<code>以下所有的命令都是在当前文件夹下</code>)</p><blockquote><p><code>npm install hexo-cli -g</code></p></blockquote><p>然后你可以看到下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_141840.png"><p>可能会有一些warning,但是不会影响正常的使用，然后输入</p><blockquote><p><code>npm install hexo - - save</code></p></blockquote><p>你会看到命令窗刷新了一大堆的安装</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_142512.png"><p>等到安装完毕，再输入以下的命令</p><blockquote><p><code>hexo -v</code></p></blockquote><p><strong>若能够看到如下的界面，则说明安装成功</strong></p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_142740.png"><h2 id="3-2-Hexo的相关配置"><a href="#3-2-Hexo的相关配置" class="headerlink" title="3.2 Hexo的相关配置"></a>3.2 Hexo的相关配置</h2><p>__1. 初始化 hexo(依旧是在当前目录下，使用命令行工具)，输入</p><blockquote><p><code>hexo init  npm install</code></p></blockquote><p>之后等待安装完成即可,完成后如下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_143748.png"><p>文件夹的结构为下图</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_144612.png"><p><strong>2. 体验Hexo</strong></p><p>上面安装完成后，在命令行中进入到<code>npm文件夹</code>下（一定要在该文件夹下，以下命令才会有效）</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145054.png"><p>输入以下的命令，你会看到下图所示</p><blockquote><p><code>hexo g</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145228.png"><p>然后输入</p><blockquote><p><code>hexo s</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_145427.png"><p>接着你可以在浏览器中打开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> ，你将会看到：</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150037.png"><p><strong>PS: 对于某些电脑，你会尴尬的发现，你怎么都打不开<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 这个网址，那么你可能是安装了这个软件,<code>福听阅读器</code></strong><br><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150253.png"></p><p><strong>认真看的朋友会发现，我们打开的是<code>4000</code>的端口，但是装了福听阅读器的电脑，这个软件已经默认的把4000的端口占领，我们使用不了，所以网址进不去，我提供一种可以解决的方案</strong></p><p><strong>①</strong> 找到hexo/npm目录下的_config.yml文件夹</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150645.png"><p><strong> ② </strong> 可在底部加入如下配置</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150918.png"><p>随便设置一个新的端口号（最大为65535，一般选择不要选择太小的，容易被占用），然后再重新输入</p><blockquote><p><code>hexo s</code> </p></blockquote><p>你会发现端口号已经改变了</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_151325.png"><p>在新的地址下即可访问</p><h2 id="3-3-将Hexo和github-pages联系起来"><a href="#3-3-将Hexo和github-pages联系起来" class="headerlink" title="3.3 将Hexo和github pages联系起来"></a>3.3 将Hexo和github pages联系起来</h2><p><strong>1. 配置git的个人信息</strong></p><p>安装git环境后，桌面上会有Git Bash 图标，接下来的操作都在此工具中进行</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_152230.png"><p><strong>①</strong> 设置Git的 user.name 和 user.email （如果你是第一次用的话）</p><p>输入以下的命令到git bash 中      </p><blockquote><p> 这里的“share” 可以替换成自己的用户名<br> <code>git config --global user.name &quot;share&quot;</code><br>这里的邮箱 share_test@163.com  替换成自己的邮箱<br><code>git config --global user.email  &quot;share_test@163.com&quot;</code></p></blockquote><p><strong>2. 检查是否有SSH Key</strong></p><p>先输入以下的命令</p><blockquote><p> <code>cd ~/.ssh</code></p></blockquote><p>接着输入</p><blockquote><p><code>ls</code></p></blockquote><p>如果出现 <strong>id_isa</strong> 和 <strong>id_isa.pub</strong> 文件，就证明已经存在SSH Key,就不用执行生成密钥的步骤了</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_153921.png"><p><strong>3. 生成密钥</strong></p><blockquote><p> 这里的邮箱 share_test@163.com  替换成自己的邮箱<br> <code>ssh-keygen -t rsa -C &quot;share_test@163.com&quot;</code></p></blockquote><p>输入以上的命令，连续三个回车，最后得到了两个文件：id_rsa和id_rsa.pub</p><p>默认的存储路径是 C:\Users\Administrator.ssh </p><p><strong>4. 添加密钥到ssh-agent</strong></p><p>确保 ssh-agent 是可用的。ssh-agent是一种控制用来保存公钥身份验证所使用的私钥的程序，其实ssh-agent就是一个<code>密钥管理器</code>，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。</p><p>输入以下的命令</p><blockquote><p> start the ssh-agent in the background<br> <code>eval &quot;$(ssh-agent -s)&quot;</code></p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_154602.png"><p>添加生成的 SSH key 到 ssh-agent,再输入以下的命令</p><blockquote><p><code>ssh-add ~/.ssh/id_rsa</code></p></blockquote><p><strong>5.登录Github,添加SSH</strong></p><p>① 在电脑 C:\Users\Administrator.ssh 找到 id_rsa.pub文件 打开并复制</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_155517.png"><p>② 登录github账户，找到如下的设置</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_154852.png"><p>③ 添加SSH,将复制的内容粘贴到此处</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_155312.png"><p><strong>6.测试添加是否成功</strong></p><p>输入以下的指令</p><blockquote><p><code>ssh -T git@github.com</code></p></blockquote><p>按回车，稍等片刻，若出现</p><blockquote><p>Hi 你的用户名! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_160106.png"><p>说明配置已经成功了</p><p><strong>7. 配置hexo配置文件</strong></p><p>① 找到hexo/npm目录下的_config.yml文件夹</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_150645.png"><p>② 找到Deployment，然后按照如下修改：</p><img src="http://oybu6iacu.bkt.clouddn.com/images/ar1_2017-10-22_160606.png"><blockquote><p><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: git@github.com:yourname/yourname.github.io.git</code><br>  <code>branch: master</code></p></blockquote><p>  我的GitHub用户名为Test,则修改为</p><blockquote><p><code>deploy:</code><br>  <code>type: git</code><br>  <code>repo: git@github.com:Test/Test.github.io.git</code><br>  <code>branch: master</code></p></blockquote><hr><blockquote><p>至此，hexo+github pages的基本环境已经搭建完成，由于篇幅问题，接下来的内容由后面的文章来讲述，感谢你的阅读。因为个人能力有限，如果文章中有错误，可以及时的留言，谢谢。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1，序言&quot;&gt;&lt;a href=&quot;#1，序言&quot; class=&quot;headerlink&quot; title=&quot;1，序言&quot;&gt;&lt;/a&gt;1，序言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一直想要搭建一个属于自己的博客，可总是能够给自己找到很多理由去拖延，直到最近看了大鹏的《缝纫机乐队》，当结尾那首Beyond&lt;code&gt;不再犹豫&lt;/code&gt;响起的时候，我知道，不能够在沉浸在过去的困顿中，不再犹豫。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo博客开发" scheme="http://warmblog.com/categories/Hexo%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Hexo" scheme="http://warmblog.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://warmblog.com/tags/Github/"/>
    
  </entry>
  
</feed>
